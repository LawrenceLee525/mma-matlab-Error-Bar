(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    107457,       2440]
NotebookOptionsPosition[    102852,       2354]
NotebookOutlinePosition[    103475,       2372]
CellTagsIndexPosition[    103432,       2369]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["MMA\:7ed8\:5236ErrorBar", "Title",
 CellChangeTimes->{{3.843351062246354*^9, 
  3.843351068438178*^9}},ExpressionUUID->"5490d584-14b2-41cf-9ea5-\
e39a8e0d39a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8433452821637945`*^9, 3.843345296439064*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"e703186f-e7c0-42f6-bbc2-05b05a1035bf"],

Cell[BoxData[
 TemplateBox[{
  "General", "obspkg", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"ErrorBarPlots`\\\\\\\"\\\"}]\\) is now \
obsolete. The legacy version being loaded may conflict with current \
functionality. See the Compatibility Guide for updating information.\"", 2, 2,
    2, 20652004535181677682, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8433460912893963`*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"46dc9d53-2f2e-4591-8f17-fb421c2692cc"]
}, Open  ]],

Cell["\:8fc7\:65f6\:4e0d\:7528\:4e86", "Text",
 CellChangeTimes->{{3.843346086587037*^9, 
  3.843346088888682*^9}},ExpressionUUID->"f06691d2-932b-44cf-a47d-\
d34d1d155a2d"],

Cell[CellGroupData[{

Cell["IntervalMarkers", "Section",
 CellChangeTimes->{{3.843345848771491*^9, 
  3.843345862771307*^9}},ExpressionUUID->"4fff5427-b270-4562-aaca-\
22a4a6c70f90"],

Cell[CellGroupData[{

Cell["\:6784\:6210", "Subsection",
 CellChangeTimes->{
  3.8433460817860837`*^9},ExpressionUUID->"123efb0c-eb41-4723-9d6a-\
625046f2e61b"],

Cell[TextData[Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      RowBox[{
       RowBox[{
        RowBox[{"1.", " ", "\:6a2a\:7ebf\:7684\:957f\:5ea6\:4e00\:6837"}], 
        "\:ff0c", "\:56e0\:4e3a\:4e0d\:8868\:793a\:4efb\:4f55uncertainty"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "2.", " ", "positive", " ", "uncertinty\:4e0enegative", " ", 
         "uncertainty\:957f\:5ea6\:53ef\:4ee5\:4e0d\:540c"}], "\:ff1b", 
        "\[IndentingNewLine]", 
        RowBox[{
        "3.", " ", "\:4e2d\:5fc3\:70b9\:8868\:793a\:7406\:8bba\:503c"}]}]}], 
      "Text"], 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAAAAAAAAAAAAEO3/AemwN7I=
        "], {{0, 78.85714285714285}, {296.1428571428571, 0}}, {0, 255},
        ColorFunction->RGBColor,
        ImageResolution->{168., 168.}],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSize->{322.07142857142844`, Automatic},
      ImageSizeRaw->{296.1428571428571, 78.85714285714285},
      PlotRange->{{0, 296.1428571428571}, {0, 78.85714285714285}}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "TextGrid"]],ExpressionUUID->"9de663bb-7ce2-4b49-9e60-811b7edb4215"]], \
"Text",
 CellChangeTimes->{
  3.8433460211884875`*^9},ExpressionUUID->"e144e3a6-54f2-4d93-833a-\
9c1be1ac04db"],

Cell["\:9519\:8bef\:793a\:8303", "Text",
 CellChangeTimes->{{3.843346890102835*^9, 
  3.8433468957460403`*^9}},ExpressionUUID->"81e707d4-c6c0-4ba5-ae37-\
8a704456ccb0"],

Cell[TextData[Cell[BoxData[
 FormBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
YATCDAfwwEn+/oPvewqBYbYc8pwolmSu4a4h7RZgyVorNi3PCeeA5CCw3DUv
EpAcBOQASL5RqgjcD8l2QhT73IDkDxJGUlY5g2ZOym/Eamb7ywya2QZq+7Op
Fa7eef7J5CeR/N6990IUNThnwDjQBoHcTboQ2JOg17i+1HacAueJ210f4/sm
M7xDkvWJJNtSV2wa2ZJ81zuJnnq8+9xI5mD+kUiOnRLee9JQXGM5Nxnp1L3n
1jN53yRX3K2IcV9zILU5/yCi8sTnZty1wK/AJ/2uj6LNunNpI5bkIInBaaIk
kq1UZpJtGjmYZN03l0CgLS3J+l6xBRHm00L7gXlYbLE7wDX2Nw8NyRnydUxy
BtRxKK4+uHrgJE/cmfACbGxqwnoeAgBU8d70J25WHgexiydutna8Q9LCQvLA
D8u3zY3ekqwYBInlgOT7huSHRHIGeRmbglZCkmSwJTkpeu+H5NgobeeDNlzb
m4gNHfavchD+/v2/P3CSP9z90AuwQVIiyC9Z2a8UsXM7SO1yQL7jFx04rt6K
I5nv+EFa2ObTrEgI5vt86m1CL6hrWyoe0qm0CvNeHCQZSP7A/PD+05L80Cc5
KbmRJJ5jSc4ct31F/fUPvx4D3smXnvE4+s0Ykh/9Uv568p0oPd6OTr4l4038
4MbbeMC7+D8P96e3zMQtECfsmrAi4Y5/LQTFX5sWtvfKu0ay3k9OalmSY+Oq
pSKJ5Hv+EzOQvJ+xH5KtZg5IthE7EP+xMjsI2vf9Zz2IPwKf+/nnYkj+RYTp
5zI2p+Kcrkpy0pxIRQILjG0/jMeSHBzY2NCqEjczyUxjMN0LQt99w3DSE+21
tn+S9wNzbDo6M8lJCiQW5mDaaA84HYd4Ig4ayKcnedrPhgWeBHvvDki+TU9P
0tVPJPmO//jMMTmQfJlJ1qmifaNYjO0ntOy9nxHOzGy/bx4cfNkMaY3Yx1uh
EktycOjkh39qJM/EpeZivetJJOvTOU9iSbZA2vlXQD4rUhtb7vnBM3gvnpE9
keTYEMe5CwuqlQ0ZNPOHGWm3+jkWbD6AGYKzJdnCfC9au7/2T43kWd9Vwp4E
rp1lTkFw8iGQr4qWno6AZDv/CtRFQHIwgglRgPH79I5Jb/cgDhj9kEkhN4nk
zDIjCV0rKiyffJUlTf2sZo6dFd6N2h+0/9MkOUjN3fID8r0nkRzYVDJICxuT
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

     "], {{0, 90.85714285714285}, {102., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{168., 168.}],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{108.85714285714289`, Automatic},
   ImageSizeRaw->{102., 90.85714285714285},
   PlotRange->{{0, 102.}, {0, 90.85714285714285}}], TraditionalForm]],
 FormatType->
  TraditionalForm,ExpressionUUID->"752bf317-aa7c-4fdb-ad57-29d6442ebc98"]], \
"Text",
 CellChangeTimes->{
  3.843347054661392*^9, {3.843347120341056*^9, 
   3.8433471250485935`*^9}},ExpressionUUID->"813ede27-1262-48fe-85f1-\
6d31e56827b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:7c7b\:578b", "Subsection",
 CellChangeTimes->{
  3.8433461342985587`*^9},ExpressionUUID->"01912b9d-cf39-4c52-94a1-\
ee7ea89f2c5a"],

Cell[TextData[Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "4991a144-2490-4e64-af64-bb3bf49dd1dc"], 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFABikHs/6OAqiCuceuo+aPmj5o/aj4a+Pv339ajd4HmA0kgm+rmQwyHICCb
6ub3LjsNNx/Iprr5tHY/rcMfAoZu+hw1f9T8UfNHGgAAHtrM4g==
       "], {{0, 32.}, {32., 0}}, {0, 255},
       ColorFunction->RGBColor,
       ImageResolution->{72, 72}],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
       Association[
        "Exif" -> Association[
          "ImageWidth" -> 32, "ImageLength" -> 32, "XResolution" -> 72, 
           "YResolution" -> 72, "ResolutionUnit" -> "Inch", "Software" -> 
           "Created with the Wolfram Language : www.wolfram.com", "DateTime" -> 
           DateObject[{2021, 3, 24, 20, 31, 47.}, "Instant", 
             "Gregorian", -5.], "TimeZoneOffset" -> -5], "Comments" -> 
         Association[
          "Software" -> "Created with the Wolfram Language : www.wolfram.com",
            "Creation Time" -> 
           DateObject[{2021, 3, 24, 20, 31, 47.}, "Instant", 
             "Gregorian", -5.]]]],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32., 32.},
     PlotRange->{{0, 32.}, {0, 32.}}], "\"\<Bars\>\"", Cell[
    "draw bars to represent errors", "TableText",ExpressionUUID->
     "98da772c-6999-421a-ba8f-59368cb8519b"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "a6d3c38f-8a5d-42bf-98f0-9c661eb5f52a"], 
    GraphicsBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      StyleBox[{
        LineBox[{{0, -1}, {0, 1}}], {
         LineBox[NCache[{{Rational[-1, 3], 1}, {
            Rational[1, 3], 1}}, {{-0.3333333333333333, 1}, {
            0.3333333333333333, 1}}]], 
         LineBox[NCache[{{Rational[-1, 3], -1}, {
            Rational[1, 3], -1}}, {{-0.3333333333333333, -1}, {
            0.3333333333333333, -1}}]]}},
       StripOnInput->False,
       Antialiasing->False], 
      {PointSize[Medium], PointBox[{{0, 0}}]}},
     ImageSize->{32, 32},
     PlotRange->{{-0.5, 0.5}, {-1.25, 1.25}}], "\"\<Fences\>\"", Cell[
    "draw fences at the error limits", "TableText",ExpressionUUID->
     "f49a6db8-6c4b-463c-8cf1-319bf7daf044"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "3ba36239-0240-47b5-9989-f5b02b5e839c"], 
    GraphicsBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      RectangleBox[{-0.1, 0.8}, {0.1, 1}], 
      RectangleBox[{-0.1, -0.8}, {0.1, -1}], 
      StyleBox[LineBox[{{0, -1}, {0, 1}}],
       StripOnInput->False,
       Antialiasing->False], 
      {PointSize[Medium], PointBox[{{0, 0}}]}},
     ImageSize->{32, 32},
     PlotRange->{{-0.5, 0.5}, {-1.25, 1.25}}], "\"\<Points\>\"", Cell[
    "draw points at the error limits", "TableText",ExpressionUUID->
     "899f5d06-c063-4ce6-9532-a6dbedda2f4f"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "69b6bc79-74bb-45ee-9753-7b9b8b85868a"], 
    GraphicsBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      {Opacity[0], EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], 
       DiskBox[{0, 0}, {0.5, 1.}]}, 
      {PointSize[Medium], PointBox[{{0, 0}}]}},
     ImageSize->{32, 32},
     PlotRange->{{-0.5, 0.5}, {-1.25, 1.25}}], "\"\<Ellipses\>\"", Cell[
    "draw an ellipse contained in the error limits", "TableText",
     ExpressionUUID->"3516441e-c560-4d5b-ae0e-cf6e69a6dc13"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "6f4b371c-68b9-4e58-9527-d6e40ab24df8"], 
    GraphicsBox[
     {RGBColor[0.368417, 0.506779, 0.709798], 
      {Opacity[0.2], 
       RectangleBox[NCache[{Rational[-1, 2], 1}, {-0.5, 1}], 
        NCache[{Rational[1, 2], -1}, {0.5, -1}]]}, 
      StyleBox[{
        LineBox[NCache[{{Rational[-1, 2], 1}, {
           Rational[1, 2], 1}}, {{-0.5, 1}, {0.5, 1}}]], 
        LineBox[NCache[{{Rational[-1, 2], -1}, {
           Rational[1, 2], -1}}, {{-0.5, -1}, {0.5, -1}}]]},
       StripOnInput->False,
       Antialiasing->False], 
      {PointSize[Medium], PointBox[{{0, 0}}]}},
     ImageSize->{32, 32},
     PlotRange->{{-0.5, 0.5}, {-1.25, 1.25}}], "\"\<Bands\>\"", Cell[
    "draw a band enclosing the uncertainty", "TableText",ExpressionUUID->
     "2aa080b8-6740-4391-a0d7-28ca0aebc42f"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "Rows" -> {None, None, None, None, {None}}},
 GridBoxDividers->{
  "Rows" -> {{
     True, True, True, True, True, 
      True}}}},ExpressionUUID->"b1420884-0445-45d6-996c-7a8fb48fe985"]], \
"Text",
 CellChangeTimes->{
  3.843346140656412*^9},ExpressionUUID->"78d34743-b8be-49d8-a9d8-\
915ad67efcb5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RandomReal", "[", "20", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Around", "[", 
  RowBox[{"1.342", ",", "0.012"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8433461564448543`*^9, 3.843346178166021*^9}, {
  3.843346424324859*^9, 3.843346448135888*^9}, {3.8433465023602743`*^9, 
  3.843346518633171*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"b4958126-354a-4c9e-bb42-7ce1d80e64ab"],

Cell[BoxData["6.0347568718973505`"], "Output",
 CellChangeTimes->{{3.843346426771711*^9, 3.8433464490294294`*^9}, 
   3.843346519446578*^9, 3.843348722311957*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"b0df1415-edbd-4171-b6b9-c3a671593419"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{"1.342", "0.012"},
   "Around"],
  Around[1.342, 0.012]]], "Output",
 CellChangeTimes->{{3.843346426771711*^9, 3.8433464490294294`*^9}, 
   3.843346519446578*^9, 3.843348722321886*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"33ea419e-df0c-443d-8700-9af9ea8d96a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"Around", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RandomReal", "[", "20", "]"}], ",", "10"}], "]"}], ",", 
    "2.5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8433464593346643`*^9, 3.843346466722674*^9}, {
  3.843346524341708*^9, 3.8433466023891287`*^9}, {3.8433467182145643`*^9, 
  3.843346719815499*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"c25944f0-8d75-4362-80fb-12c9cc5ca391"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{"2.9", "2.5"},
     "Around"],
    Around[2.926094192551364, 2.5]], ",", 
   InterpretationBox[
    TemplateBox[{"12.3", "2.5"},
     "Around"],
    Around[12.323959273801862`, 2.5]], ",", 
   InterpretationBox[
    TemplateBox[{"5.3", "2.5"},
     "Around"],
    Around[5.271280510348369, 2.5]], ",", 
   InterpretationBox[
    TemplateBox[{"13.6", "2.5"},
     "Around"],
    Around[13.56346744456522, 2.5]], ",", 
   InterpretationBox[
    TemplateBox[{"3.1", "2.5"},
     "Around"],
    Around[3.0984945552674716`, 2.5]], ",", 
   InterpretationBox[
    TemplateBox[{"10.1", "2.5"},
     "Around"],
    Around[10.133111422883218`, 2.5]], ",", 
   InterpretationBox[
    TemplateBox[{"7.1", "2.5"},
     "Around"],
    Around[7.066859909565721, 2.5]], ",", 
   InterpretationBox[
    TemplateBox[{"2.9", "2.5"},
     "Around"],
    Around[2.8726630448433497`, 2.5]], ",", 
   InterpretationBox[
    TemplateBox[{"15.3", "2.5"},
     "Around"],
    Around[15.28717131799845, 2.5]], ",", 
   InterpretationBox[
    TemplateBox[{"1.9", "2.5"},
     "Around"],
    Around[1.9090525331890262`, 2.5]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8433464671964893`*^9, {3.8433465395726013`*^9, 3.8433465688158894`*^9}, {
   3.8433467095276413`*^9, 3.8433467202280817`*^9}, 3.843348730310194*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"a53fed73-fc5c-4a33-a91b-eafc0fa71709"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"data", ",", 
     RowBox[{"IntervalMarkers", "\[Rule]", "style"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"style", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Bars\>\"", ",", "\"\<Fences\>\"", ",", "\"\<Points\>\"", ",", 
       "\"\<Ellipses\>\"", ",", "\"\<Bands\>\""}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8433465728897934`*^9, 3.843346703928729*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"7fac9e5c-e33e-4cbe-abaf-f74ba3494792"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`style$$ = "Bars", Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`style$$], {
      "Bars", "Fences", "Points", "Ellipses", "Bands"}}}, Typeset`size$$ = {
    265.6840873484366, {3., 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`style$$ = "Bars"}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ListPlot[$CellContext`data, IntervalMarkers -> $CellContext`style$$], 
      "Specifications" :> {{$CellContext`style$$, {
         "Bars", "Fences", "Points", "Ellipses", "Bands"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{314., {49.134033143054694`, 54.865966856945306`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.843346582757771*^9, {3.843346704636638*^9, 3.8433467116888046`*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"937cc362-dc2b-437b-bc32-63fd2fa2d708"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot", "lpn", 
   "\"\\!\\(\\*RowBox[{\\\"data\\\"}]\\) is not a list of numbers or pairs of \
numbers.\"", 2, 1, 1, 20652038621026092205, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.84335111531164*^9},
 CellLabel->"",ExpressionUUID->"b68bbae3-3b0b-483a-9fe4-e848ec5e5a55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IntervalMarkers"}]], "Input",
 CellChangeTimes->{{3.8433487849972687`*^9, 3.843348788414566*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"9835a3ef-6ce1-43d7-9e7f-69c12872aa61"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/IntervalMarkers",
              ButtonNote->"paclet:ref/IntervalMarkers"],
             "\"paclet:ref/IntervalMarkers\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"IntervalMarkers is an option for plotting functions \
such as ListPlot and BarChart that specifies how to represent uncertainty \
intervals.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/IntervalMarkers", 
                    "paclet:ref/IntervalMarkers", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
IntervalMarkers.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
IntervalMarkers.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`IntervalMarkers\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/IntervalMarkers",
              ButtonNote->"paclet:ref/IntervalMarkers"],
             "\"paclet:ref/IntervalMarkers\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"IntervalMarkers is an option for plotting functions \
such as ListPlot and BarChart that specifies how to represent uncertainty \
intervals.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "IntervalMarkers is an option for plotting functions such as ListPlot and \
BarChart that specifies how to represent uncertainty intervals.", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/IntervalMarkers", "Web" -> 
      "http://reference.wolfram.com/language/ref/IntervalMarkers.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`IntervalMarkers"], False]]], "Output",
 CellChangeTimes->{{3.843348785308817*^9, 3.843348789422727*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"fec9e708-5232-4fb4-b7fd-65ab4f8fc4aa"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"MATLAB\:7ed8\:5236ErrorBar", "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "1", "]"}], ":=", 
   RowBox[{"<<", "MATLink`"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "2", "]"}], ":=", 
   RowBox[{"OpenMATLAB", "[", "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "16", "]"}], ":=", 
   RowBox[{"x", "=", 
    RowBox[{"0", ":", 
     RowBox[{"pi", "/", "10"}], ":", "pi"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"sin", 
    RowBox[{"(", "x", ")"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "16", "]"}], "=", 
   "\"\<\ny =\n\n         0    0.3090    0.5878    0.8090    0.9511    1.0000 \
   0.9511    0.8090    0.5878    0.3090    0.0000\n\n\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "18", "]"}], ":=", 
   RowBox[{"doc", " ", "std"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "20", "]"}], ":=", 
   RowBox[{"std", 
    RowBox[{"(", "y", ")"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "20", "]"}], "=", 
   "\"\<\nans =\n\n    0.3710\n\n\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "22", "]"}], ":=", 
   RowBox[{"size", 
    RowBox[{"(", "y", ")"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "22", "]"}], "=", 
   "\"\<\nans =\n\n     1    11\n\n\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "24", "]"}], ":=", 
   RowBox[{"doc", " ", "ones"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "27", "]"}], ":=", 
   RowBox[{"ones", 
    RowBox[{"(", 
     RowBox[{"[", 
      RowBox[{"1", ",", "11"}], "]"}], ")"}]}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "27", "]"}], "=", 
   "\"\<\nans =\n\n     1     1     1     1     1     1     1     1     1     \
1     1\n\n\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "46", "]"}], ":=", 
   RowBox[{"e", "=", 
    RowBox[{"std", 
     RowBox[{"(", "y", ")"}], "*", "ones", 
     RowBox[{"(", 
      RowBox[{"size", 
       RowBox[{"(", "y", ")"}]}], ")"}]}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "46", "]"}], "=", 
   "\"\<\ne =\n\n    0.3710    0.3710    0.3710    0.3710    0.3710    0.3710 \
   0.3710    0.3710    0.3710    0.3710    0.3710\n\n\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "47", "]"}], ":=", 
   RowBox[{"close", " ", "all"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"subplot", 
  RowBox[{"(", 
   RowBox[{"2", ",", "2", ",", "1"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "e"}], ")"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"subplot", 
  RowBox[{"(", 
   RowBox[{"2", ",", "2", ",", "2"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "e", ",", 
     RowBox[{"'", 
      RowBox[{"horizontal", "'"}]}]}], ")"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"subplot", 
  RowBox[{"(", 
   RowBox[{"2", ",", "2", ",", "3"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "e", ",", 
     RowBox[{"'", 
      RowBox[{"both", "'"}]}]}], ")"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"subplot", 
  RowBox[{"(", 
   RowBox[{"2", ",", "2", ",", "4"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "e", ",", 
     RowBox[{"'", 
      RowBox[{"both", "'"}]}], ",", 
     RowBox[{"'", 
      RowBox[{"o", "'"}]}]}], ")"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"In", "[", "49", "]"}], ":=", 
  RowBox[{"close", " ", "all"}]}], "\n", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"1", ":", "10", ":", "100"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"[", 
    RowBox[{
    "20", " ", "30", " ", "45", " ", "40", " ", "60", " ", "65", " ", "80", 
     " ", "75", " ", "95", " ", "90"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"yneg", "=", 
   RowBox[{"[", 
    RowBox[{
    "1", " ", "3", " ", "5", " ", "3", " ", "5", " ", "3", " ", "6", " ", "4",
      " ", "3", " ", "3"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ypos", "=", 
   RowBox[{"[", 
    RowBox[{
    "2", " ", "5", " ", "3", " ", "5", " ", "2", " ", "5", " ", "2", " ", "2",
      " ", "5", " ", "5"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xneg", "=", 
   RowBox[{"[", 
    RowBox[{
    "1", " ", "3", " ", "5", " ", "3", " ", "5", " ", "3", " ", "6", " ", "4",
      " ", "3", " ", "3"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xpos", "=", 
   RowBox[{"[", 
    RowBox[{
    "2", " ", "5", " ", "3", " ", "5", " ", "2", " ", "5", " ", "2", " ", "2",
      " ", "5", " ", "5"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{
    "x", ",", "y", ",", "yneg", ",", "ypos", ",", "xneg", ",", "xpos", ",", 
     RowBox[{"'", 
      RowBox[{"o", "'"}]}]}], ")"}]}], "\[IndentingNewLine]", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"In", "[", "57", "]"}], ":=", 
  RowBox[{"close", " ", "all"}]}], "\n", 
 RowBox[{"clear", " ", "all"}], "\n", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"linspace", 
    RowBox[{"(", 
     RowBox[{"0", ",", "10", ",", "15"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"sin", 
    RowBox[{"(", 
     RowBox[{"x", "/", "2"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"err", "=", 
   RowBox[{"0.3", "*", "ones", 
    RowBox[{"(", 
     RowBox[{"size", 
      RowBox[{"(", "y", ")"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "err", ",", 
     RowBox[{"'", "-", 
      RowBox[{"p", "'"}]}], ",", 
     RowBox[{"'", 
      RowBox[{"MarkerSize", "'"}]}], ",", "10", ",", 
     RowBox[{"'", 
      RowBox[{"MarkerEdgeColor", "'"}]}], ",", 
     RowBox[{"'", 
      RowBox[{"red", "'"}]}], ",", 
     RowBox[{"'", 
      RowBox[{"MarkerFaceColor", "'"}]}], ",", 
     RowBox[{"[", 
      RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "]"}]}], ")"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"In", "[", "59", "]"}], ":=", 
  RowBox[{"close", " ", "all"}]}], "\n", 
 RowBox[{"clear", " ", "all"}], "\n", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"linspace", 
    RowBox[{"(", 
     RowBox[{"0", ",", "2", ",", "15"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"exp", 
    RowBox[{"(", "x", ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"err", "=", 
   RowBox[{"0.3", "*", "ones", 
    RowBox[{"(", 
     RowBox[{"size", 
      RowBox[{"(", "y", ")"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"errorbar", 
  RowBox[{"(", 
   RowBox[{"x", ",", "y", ",", "err", ",", 
    RowBox[{"'", 
     RowBox[{"CapSize", "'"}]}], ",", "10"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.843351072818072*^9, 
  3.8433510728230653`*^9}},ExpressionUUID->"f48a05b4-335a-4ef3-8c2d-\
77ec231c0103"],

Cell[BoxData[{
 RowBox[{"MATLAB\:7ed8\:5236ErrorBar", "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "1", "]"}], ":=", 
   RowBox[{"<<", "MATLink`"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "2", "]"}], ":=", 
   RowBox[{"OpenMATLAB", "[", "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "16", "]"}], ":=", 
   RowBox[{"x", "=", 
    RowBox[{"0", ":", 
     RowBox[{"pi", "/", "10"}], ":", "pi"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"sin", 
    RowBox[{"(", "x", ")"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "16", "]"}], "=", 
   "\"\<\ny =\n\n         0    0.3090    0.5878    0.8090    0.9511    1.0000 \
   0.9511    0.8090    0.5878    0.3090    0.0000\n\n\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "18", "]"}], ":=", 
   RowBox[{"doc", " ", "std"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "20", "]"}], ":=", 
   RowBox[{"std", 
    RowBox[{"(", "y", ")"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "20", "]"}], "=", 
   "\"\<\nans =\n\n    0.3710\n\n\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "22", "]"}], ":=", 
   RowBox[{"size", 
    RowBox[{"(", "y", ")"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "22", "]"}], "=", 
   "\"\<\nans =\n\n     1    11\n\n\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "24", "]"}], ":=", 
   RowBox[{"doc", " ", "ones"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "27", "]"}], ":=", 
   RowBox[{"ones", 
    RowBox[{"(", 
     RowBox[{"[", 
      RowBox[{"1", ",", "11"}], "]"}], ")"}]}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "27", "]"}], "=", 
   "\"\<\nans =\n\n     1     1     1     1     1     1     1     1     1     \
1     1\n\n\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "46", "]"}], ":=", 
   RowBox[{"e", "=", 
    RowBox[{"std", 
     RowBox[{"(", "y", ")"}], "*", "ones", 
     RowBox[{"(", 
      RowBox[{"size", 
       RowBox[{"(", "y", ")"}]}], ")"}]}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "46", "]"}], "=", 
   "\"\<\ne =\n\n    0.3710    0.3710    0.3710    0.3710    0.3710    0.3710 \
   0.3710    0.3710    0.3710    0.3710    0.3710\n\n\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "47", "]"}], ":=", 
   RowBox[{"close", " ", "all"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"subplot", 
  RowBox[{"(", 
   RowBox[{"2", ",", "2", ",", "1"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "e"}], ")"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"subplot", 
  RowBox[{"(", 
   RowBox[{"2", ",", "2", ",", "2"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "e", ",", 
     RowBox[{"'", 
      RowBox[{"horizontal", "'"}]}]}], ")"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"subplot", 
  RowBox[{"(", 
   RowBox[{"2", ",", "2", ",", "3"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "e", ",", 
     RowBox[{"'", 
      RowBox[{"both", "'"}]}]}], ")"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"subplot", 
  RowBox[{"(", 
   RowBox[{"2", ",", "2", ",", "4"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "e", ",", 
     RowBox[{"'", 
      RowBox[{"both", "'"}]}], ",", 
     RowBox[{"'", 
      RowBox[{"o", "'"}]}]}], ")"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"In", "[", "49", "]"}], ":=", 
  RowBox[{"close", " ", "all"}]}], "\n", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"1", ":", "10", ":", "100"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"[", 
    RowBox[{
    "20", " ", "30", " ", "45", " ", "40", " ", "60", " ", "65", " ", "80", 
     " ", "75", " ", "95", " ", "90"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"yneg", "=", 
   RowBox[{"[", 
    RowBox[{
    "1", " ", "3", " ", "5", " ", "3", " ", "5", " ", "3", " ", "6", " ", "4",
      " ", "3", " ", "3"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ypos", "=", 
   RowBox[{"[", 
    RowBox[{
    "2", " ", "5", " ", "3", " ", "5", " ", "2", " ", "5", " ", "2", " ", "2",
      " ", "5", " ", "5"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xneg", "=", 
   RowBox[{"[", 
    RowBox[{
    "1", " ", "3", " ", "5", " ", "3", " ", "5", " ", "3", " ", "6", " ", "4",
      " ", "3", " ", "3"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xpos", "=", 
   RowBox[{"[", 
    RowBox[{
    "2", " ", "5", " ", "3", " ", "5", " ", "2", " ", "5", " ", "2", " ", "2",
      " ", "5", " ", "5"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{
    "x", ",", "y", ",", "yneg", ",", "ypos", ",", "xneg", ",", "xpos", ",", 
     RowBox[{"'", 
      RowBox[{"o", "'"}]}]}], ")"}]}], "\[IndentingNewLine]", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"In", "[", "57", "]"}], ":=", 
  RowBox[{"close", " ", "all"}]}], "\n", 
 RowBox[{"clear", " ", "all"}], "\n", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"linspace", 
    RowBox[{"(", 
     RowBox[{"0", ",", "10", ",", "15"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"sin", 
    RowBox[{"(", 
     RowBox[{"x", "/", "2"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"err", "=", 
   RowBox[{"0.3", "*", "ones", 
    RowBox[{"(", 
     RowBox[{"size", 
      RowBox[{"(", "y", ")"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "err", ",", 
     RowBox[{"'", "-", 
      RowBox[{"p", "'"}]}], ",", 
     RowBox[{"'", 
      RowBox[{"MarkerSize", "'"}]}], ",", "10", ",", 
     RowBox[{"'", 
      RowBox[{"MarkerEdgeColor", "'"}]}], ",", 
     RowBox[{"'", 
      RowBox[{"red", "'"}]}], ",", 
     RowBox[{"'", 
      RowBox[{"MarkerFaceColor", "'"}]}], ",", 
     RowBox[{"[", 
      RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "]"}]}], ")"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"In", "[", "59", "]"}], ":=", 
  RowBox[{"close", " ", "all"}]}], "\n", 
 RowBox[{"clear", " ", "all"}], "\n", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"linspace", 
    RowBox[{"(", 
     RowBox[{"0", ",", "2", ",", "15"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"exp", 
    RowBox[{"(", "x", ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"err", "=", 
   RowBox[{"0.3", "*", "ones", 
    RowBox[{"(", 
     RowBox[{"size", 
      RowBox[{"(", "y", ")"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"errorbar", 
  RowBox[{"(", 
   RowBox[{"x", ",", "y", ",", "err", ",", 
    RowBox[{"'", 
     RowBox[{"CapSize", "'"}]}], ",", "10"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.8433510748774023`*^9, 
  3.8433510748803945`*^9}},ExpressionUUID->"e69ad18c-4b72-4a68-878c-\
3d1befeed98a"],

Cell[BoxData[{
 RowBox[{"MATLAB\:7ed8\:5236ErrorBar", "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "1", "]"}], ":=", 
   RowBox[{"<<", "MATLink`"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "2", "]"}], ":=", 
   RowBox[{"OpenMATLAB", "[", "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "16", "]"}], ":=", 
   RowBox[{"x", "=", 
    RowBox[{"0", ":", 
     RowBox[{"pi", "/", "10"}], ":", "pi"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"sin", 
    RowBox[{"(", "x", ")"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "16", "]"}], "=", 
   "\"\<\ny =\n\n         0    0.3090    0.5878    0.8090    0.9511    1.0000 \
   0.9511    0.8090    0.5878    0.3090    0.0000\n\n\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "18", "]"}], ":=", 
   RowBox[{"doc", " ", "std"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "20", "]"}], ":=", 
   RowBox[{"std", 
    RowBox[{"(", "y", ")"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "20", "]"}], "=", 
   "\"\<\nans =\n\n    0.3710\n\n\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "22", "]"}], ":=", 
   RowBox[{"size", 
    RowBox[{"(", "y", ")"}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "22", "]"}], "=", 
   "\"\<\nans =\n\n     1    11\n\n\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "24", "]"}], ":=", 
   RowBox[{"doc", " ", "ones"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "27", "]"}], ":=", 
   RowBox[{"ones", 
    RowBox[{"(", 
     RowBox[{"[", 
      RowBox[{"1", ",", "11"}], "]"}], ")"}]}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "27", "]"}], "=", 
   "\"\<\nans =\n\n     1     1     1     1     1     1     1     1     1     \
1     1\n\n\>\""}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "46", "]"}], ":=", 
   RowBox[{"e", "=", 
    RowBox[{"std", 
     RowBox[{"(", "y", ")"}], "*", "ones", 
     RowBox[{"(", 
      RowBox[{"size", 
       RowBox[{"(", "y", ")"}]}], ")"}]}]}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Out", "[", "46", "]"}], "=", 
   "\"\<\ne =\n\n    0.3710    0.3710    0.3710    0.3710    0.3710    0.3710 \
   0.3710    0.3710    0.3710    0.3710    0.3710\n\n\>\""}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"In", "[", "47", "]"}], ":=", 
   RowBox[{"close", " ", "all"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"subplot", 
  RowBox[{"(", 
   RowBox[{"2", ",", "2", ",", "1"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "e"}], ")"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"subplot", 
  RowBox[{"(", 
   RowBox[{"2", ",", "2", ",", "2"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "e", ",", 
     RowBox[{"'", 
      RowBox[{"horizontal", "'"}]}]}], ")"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"subplot", 
  RowBox[{"(", 
   RowBox[{"2", ",", "2", ",", "3"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "e", ",", 
     RowBox[{"'", 
      RowBox[{"both", "'"}]}]}], ")"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"subplot", 
  RowBox[{"(", 
   RowBox[{"2", ",", "2", ",", "4"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "e", ",", 
     RowBox[{"'", 
      RowBox[{"both", "'"}]}], ",", 
     RowBox[{"'", 
      RowBox[{"o", "'"}]}]}], ")"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"In", "[", "49", "]"}], ":=", 
  RowBox[{"close", " ", "all"}]}], "\n", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"1", ":", "10", ":", "100"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"[", 
    RowBox[{
    "20", " ", "30", " ", "45", " ", "40", " ", "60", " ", "65", " ", "80", 
     " ", "75", " ", "95", " ", "90"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"yneg", "=", 
   RowBox[{"[", 
    RowBox[{
    "1", " ", "3", " ", "5", " ", "3", " ", "5", " ", "3", " ", "6", " ", "4",
      " ", "3", " ", "3"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ypos", "=", 
   RowBox[{"[", 
    RowBox[{
    "2", " ", "5", " ", "3", " ", "5", " ", "2", " ", "5", " ", "2", " ", "2",
      " ", "5", " ", "5"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xneg", "=", 
   RowBox[{"[", 
    RowBox[{
    "1", " ", "3", " ", "5", " ", "3", " ", "5", " ", "3", " ", "6", " ", "4",
      " ", "3", " ", "3"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xpos", "=", 
   RowBox[{"[", 
    RowBox[{
    "2", " ", "5", " ", "3", " ", "5", " ", "2", " ", "5", " ", "2", " ", "2",
      " ", "5", " ", "5"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{
    "x", ",", "y", ",", "yneg", ",", "ypos", ",", "xneg", ",", "xpos", ",", 
     RowBox[{"'", 
      RowBox[{"o", "'"}]}]}], ")"}]}], "\[IndentingNewLine]", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"In", "[", "57", "]"}], ":=", 
  RowBox[{"close", " ", "all"}]}], "\n", 
 RowBox[{"clear", " ", "all"}], "\n", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"linspace", 
    RowBox[{"(", 
     RowBox[{"0", ",", "10", ",", "15"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"sin", 
    RowBox[{"(", 
     RowBox[{"x", "/", "2"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"err", "=", 
   RowBox[{"0.3", "*", "ones", 
    RowBox[{"(", 
     RowBox[{"size", 
      RowBox[{"(", "y", ")"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"errorbar", 
   RowBox[{"(", 
    RowBox[{"x", ",", "y", ",", "err", ",", 
     RowBox[{"'", "-", 
      RowBox[{"p", "'"}]}], ",", 
     RowBox[{"'", 
      RowBox[{"MarkerSize", "'"}]}], ",", "10", ",", 
     RowBox[{"'", 
      RowBox[{"MarkerEdgeColor", "'"}]}], ",", 
     RowBox[{"'", 
      RowBox[{"red", "'"}]}], ",", 
     RowBox[{"'", 
      RowBox[{"MarkerFaceColor", "'"}]}], ",", 
     RowBox[{"[", 
      RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "]"}]}], ")"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"In", "[", "59", "]"}], ":=", 
  RowBox[{"close", " ", "all"}]}], "\n", 
 RowBox[{"clear", " ", "all"}], "\n", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"linspace", 
    RowBox[{"(", 
     RowBox[{"0", ",", "2", ",", "15"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"exp", 
    RowBox[{"(", "x", ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"err", "=", 
   RowBox[{"0.3", "*", "ones", 
    RowBox[{"(", 
     RowBox[{"size", 
      RowBox[{"(", "y", ")"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"errorbar", 
  RowBox[{"(", 
   RowBox[{"x", ",", "y", ",", "err", ",", 
    RowBox[{"'", 
     RowBox[{"CapSize", "'"}]}], ",", "10"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.8433510859513073`*^9, 
  3.8433510859543076`*^9}},ExpressionUUID->"a6cb758f-0137-4627-8694-\
01650af1216d"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Matlab\:7ed8\:5236ErrorBar", "Title",
 CellChangeTimes->{{3.843351146055089*^9, 
  3.8433511550309772`*^9}},ExpressionUUID->"38d08518-f6ab-4b60-b9e4-\
bb544aded66f"],

Cell[BoxData[
 RowBox[{"<<", "MATLink`"}]], "Input",
 CellChangeTimes->{{3.843351156906454*^9, 3.8433511617699676`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"575c1b73-703a-417b-a434-7700b8d625a5"],

Cell[BoxData[
 RowBox[{"OpenMATLAB", "[", "]"}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"438ad0eb-2290-410e-8f84-f134d94eb24a"],

Cell[CellGroupData[{

Cell["\<\
x=0:pi/10:pi;
y=sin(x)\
\>", "Program",
 Evaluatable->True,
 CellGroupingRules->"InputGrouping",
 CellEvaluationFunction->(MATLink`MEvaluate[
   First[
    FrontEndExecute[
     FrontEnd`ExportPacket[
      Cell[#], "InputText"]]]]& ),
 CellFrameLabels->{{None, "MATLAB"}, {None, None}},
 CellChangeTimes->{{3.8433513640191727`*^9, 3.843351374344388*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"a1c3c8d2-973a-419b-908f-a655d1bb6cc1"],

Cell[BoxData["\<\"\\ny =\\n\\n         0    0.3090    0.5878    0.8090    \
0.9511    1.0000    0.9511    0.8090    0.5878    0.3090    \
0.0000\\n\\n\"\>"], "Output",
 CellChangeTimes->{3.843351376231759*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"038e51ad-c64e-4afe-8cfa-4bcf0138a2f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["e=std(y)*ones(size(y))", "Program",
 Evaluatable->True,
 CellGroupingRules->"InputGrouping",
 CellEvaluationFunction->(MATLink`MEvaluate[
   First[
    FrontEndExecute[
     FrontEnd`ExportPacket[
      Cell[#], "InputText"]]]]& ),
 CellFrameLabels->{{None, "MATLAB"}, {None, None}},
 CellChangeTimes->{{3.843351387593536*^9, 3.8433513884902983`*^9}, 
   3.843351419579857*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"64dc8a14-2d4c-4de1-86bc-ad9c50794506"],

Cell[BoxData["\<\"\\ne =\\n\\n    0.3710    0.3710    0.3710    0.3710    \
0.3710    0.3710    0.3710    0.3710    0.3710    0.3710    \
0.3710\\n\\n\"\>"], "Output",
 CellChangeTimes->{3.8433513892756667`*^9, 3.843351420322192*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"a7206c14-787c-4f9d-a64d-2162dcaa6557"]
}, Open  ]],

Cell["\<\
close all

subplot(2,2,1)
errorbar(x,y,e)

subplot(2,2,2)
errorbar(x,y,e,'horizontal')

subplot(2,2,3)
errorbar(x,y,e,'both')

subplot(2,2,4)
errorbar(x,y,e,'both','o')\
\>", "Program",
 Evaluatable->True,
 CellGroupingRules->"InputGrouping",
 CellEvaluationFunction->(MATLink`MEvaluate[
   First[
    FrontEndExecute[
     FrontEnd`ExportPacket[
      Cell[#], "InputText"]]]]& ),
 CellFrameLabels->{{None, "MATLAB"}, {None, None}},
 CellChangeTimes->{{3.8433514407341805`*^9, 3.843351441689273*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"6022ac88-3bfa-4a67-bfc3-8bc63d77500d"],

Cell["\<\
close all
x=1:10:100;
y=[20 30 45 40 60 65 80 75 95 90];
yneg=[1 3 5 3 5 3 6 4 3 3];
ypos=[2 5 3 5 2 5 2 2 5 5];
xneg=[1 3 5 3 5 3 6 4 3 3];
xpos=[2 5 3 5 2 5 2 2 5 5];
errorbar(x,y,yneg,ypos,xneg,xpos,'o')\
\>", "Program",
 Evaluatable->True,
 CellGroupingRules->"InputGrouping",
 CellEvaluationFunction->(MATLink`MEvaluate[
   First[
    FrontEndExecute[
     FrontEnd`ExportPacket[
      Cell[#], "InputText"]]]]& ),
 CellFrameLabels->{{None, "MATLAB"}, {None, None}},
 CellChangeTimes->{{3.843351464283805*^9, 3.8433514650821486`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"cb2a1e21-cbd2-4b50-a59d-853709ccd4a5"],

Cell["\<\
clear all
x=linspace(0,10,15);
y=sin(x/2);
err=0.3*ones(size(y));
errorbar(x,y,err,'-p','MarkerSize',10,'MarkerEdgeColor','red','\
MarkerFaceColor',[0.5,0.5,0.5])\
\>", "Program",
 Evaluatable->True,
 CellGroupingRules->"InputGrouping",
 CellEvaluationFunction->(MATLink`MEvaluate[
   First[
    FrontEndExecute[
     FrontEnd`ExportPacket[
      Cell[#], "InputText"]]]]& ),
 CellFrameLabels->{{None, "MATLAB"}, {None, None}},
 CellChangeTimes->{{3.8433514785171175`*^9, 3.8433514790499516`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"bc7fd16b-5dec-437e-9717-46e5257d6dd5"],

Cell["\<\
clear all
x=linspace(0,2,15);
y=exp(x);
err=0.3*ones(size(y));
errorbar(x,y,err,'CapSize',10)\
\>", "Program",
 Evaluatable->True,
 CellGroupingRules->"InputGrouping",
 CellEvaluationFunction->(MATLink`MEvaluate[
   First[
    FrontEndExecute[
     FrontEnd`ExportPacket[
      Cell[#], "InputText"]]]]& ),
 CellFrameLabels->{{None, "MATLAB"}, {None, None}},
 CellChangeTimes->{{3.843351492908764*^9, 3.843351493912486*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"ce242500-305e-4684-95f4-ff59cfe7f509"]
}, Closed]]
},
WindowSize->{585.4285714285714, 709.7142857142857},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (June 19, 2021)",
StyleDefinitions->FrontEnd`FileName[{$RootDirectory, "C:", "Program Files", 
   "Wolfram Research", "Mathematica", "12.3", "SystemFiles", "FrontEnd", 
   "StyleSheets", "Creative"}, "PastelColor.nb", CharacterEncoding -> "UTF-8"],
ExpressionUUID->"a32a9948-03e0-4f32-a947-cd0814e47b9e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 166, 3, 65, "Title",ExpressionUUID->"5490d584-14b2-41cf-9ea5-e39a8e0d39a3"],
Cell[CellGroupData[{
Cell[771, 29, 225, 3, 40, "Input",ExpressionUUID->"e703186f-e7c0-42f6-bbc2-05b05a1035bf"],
Cell[999, 34, 505, 11, 63, "Message",ExpressionUUID->"46dc9d53-2f2e-4591-8f17-fb421c2692cc"]
}, Open  ]],
Cell[1519, 48, 172, 3, 32, "Text",ExpressionUUID->"f06691d2-932b-44cf-a47d-d34d1d155a2d"],
Cell[CellGroupData[{
Cell[1716, 55, 160, 3, 59, "Section",ExpressionUUID->"4fff5427-b270-4562-aaca-22a4a6c70f90"],
Cell[CellGroupData[{
Cell[1901, 62, 138, 3, 36, "Subsection",ExpressionUUID->"123efb0c-eb41-4723-9d6a-625046f2e61b"],
Cell[2042, 67, 9753, 172, 147, "Text",ExpressionUUID->"e144e3a6-54f2-4d93-833a-9c1be1ac04db"],
Cell[11798, 241, 168, 3, 32, "Text",ExpressionUUID->"81e707d4-c6c0-4ba5-ae37-8a704456ccb0"],
Cell[11969, 246, 41759, 692, 110, "Text",ExpressionUUID->"813ede27-1262-48fe-85f1-6d31e56827b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53765, 943, 138, 3, 36, "Subsection",ExpressionUUID->"01912b9d-cf39-4c52-94a1-ee7ea89f2c5a"],
Cell[53906, 948, 4739, 105, 213, "Text",ExpressionUUID->"78d34743-b8be-49d8-a9d8-915ad67efcb5"],
Cell[CellGroupData[{
Cell[58670, 1057, 404, 7, 60, "Input",ExpressionUUID->"b4958126-354a-4c9e-bb42-7ce1d80e64ab"],
Cell[59077, 1066, 241, 3, 40, "Output",ExpressionUUID->"b0df1415-edbd-4171-b6b9-c3a671593419"],
Cell[59321, 1071, 312, 7, 40, "Output",ExpressionUUID->"33ea419e-df0c-443d-8700-9af9ea8d96a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59670, 1083, 468, 11, 40, "Input",ExpressionUUID->"c25944f0-8d75-4362-80fb-12c9cc5ca391"],
Cell[60141, 1096, 1449, 46, 40, "Output",ExpressionUUID->"a53fed73-fc5c-4a33-a91b-eafc0fa71709"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61627, 1147, 565, 14, 40, "Input",ExpressionUUID->"7fac9e5c-e33e-4cbe-abaf-f74ba3494792"],
Cell[62195, 1163, 1818, 36, 131, "Output",ExpressionUUID->"937cc362-dc2b-437b-bc32-63fd2fa2d708"],
Cell[64016, 1201, 337, 7, 28, "Message",ExpressionUUID->"b68bbae3-3b0b-483a-9fe4-e848ec5e5a55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64390, 1213, 205, 3, 40, "Input",ExpressionUUID->"9835a3ef-6ce1-43d7-9e7f-69c12872aa61"],
Cell[64598, 1218, 12179, 296, 103, "Output",ExpressionUUID->"fec9e708-5232-4fb4-b7fd-65ab4f8fc4aa"]
}, Open  ]],
Cell[76792, 1517, 7184, 227, 1791, "Input",ExpressionUUID->"f48a05b4-335a-4ef3-8c2d-77ec231c0103"],
Cell[83979, 1746, 7186, 227, 1791, "Input",ExpressionUUID->"e69ad18c-4b72-4a68-878c-3d1befeed98a"],
Cell[91168, 1975, 7186, 227, 1886, "Input",ExpressionUUID->"a6cb758f-0137-4627-8694-01650af1216d"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[98415, 2209, 171, 3, 39, "Title",ExpressionUUID->"38d08518-f6ab-4b60-b9e4-bb544aded66f"],
Cell[98589, 2214, 198, 3, 40, "Input",ExpressionUUID->"575c1b73-703a-417b-a434-7700b8d625a5"],
Cell[98790, 2219, 136, 2, 40, "Input",ExpressionUUID->"438ad0eb-2290-410e-8f84-f134d94eb24a"],
Cell[CellGroupData[{
Cell[98951, 2225, 443, 13, 58, "Program",ExpressionUUID->"a1c3c8d2-973a-419b-908f-a655d1bb6cc1",
 Evaluatable->True,
 CellGroupingRules->"InputGrouping"],
Cell[99397, 2240, 287, 4, 155, "Output",ExpressionUUID->"038e51ad-c64e-4afe-8cfa-4bcf0138a2f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99721, 2249, 461, 11, 41, "Program",ExpressionUUID->"64dc8a14-2d4c-4de1-86bc-ad9c50794506",
 Evaluatable->True,
 CellGroupingRules->"InputGrouping"],
Cell[100185, 2262, 311, 4, 155, "Output",ExpressionUUID->"a7206c14-787c-4f9d-a64d-2162dcaa6557"]
}, Open  ]],
Cell[100511, 2269, 589, 24, 245, "Program",ExpressionUUID->"6022ac88-3bfa-4a67-bfc3-8bc63d77500d",
 Evaluatable->True,
 CellGroupingRules->"InputGrouping"],
Cell[101103, 2295, 628, 19, 160, "Program",ExpressionUUID->"cb2a1e21-cbd2-4b50-a59d-853709ccd4a5",
 Evaluatable->True,
 CellGroupingRules->"InputGrouping"],
Cell[101734, 2316, 586, 17, 143, "Program",ExpressionUUID->"bc7fd16b-5dec-437e-9717-46e5257d6dd5",
 Evaluatable->True,
 CellGroupingRules->"InputGrouping"],
Cell[102323, 2335, 513, 16, 109, "Program",ExpressionUUID->"ce242500-305e-4684-95f4-ff59cfe7f509",
 Evaluatable->True,
 CellGroupingRules->"InputGrouping"]
}, Closed]]
}
]
*)

